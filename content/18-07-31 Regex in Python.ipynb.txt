{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Regex in Python\n",
    "\n",
    "<span>As you deal with more and messier string data, regex starts becoming a very valuable skill that can save you a lot of time. It also has a secondary benefit of making your code a bit more slick (simpler). Below you will find some simple regex that can be very powerful.</span>\n",
    "\n",
    "### Import Preliminaries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-09-11T05:59:11.252503Z",
     "start_time": "2018-09-11T05:59:11.249625Z"
    }
   },
   "outputs": [],
   "source": [
    "# Import modules\n",
    "import re\n",
    "\n",
    "# Some random text from Wikipedias Feature Articlue  \n",
    "string = 'The octopus is a soft-bodied, eight-armed mollusc \\\n",
    "of the order Octopoda, with around 300 known species. Along \\\n",
    "with squids, cuttlefish and nautiloids, they are classed as \\\n",
    "cephalopods. The mouth with its hard beak is at the base of \\\n",
    "the arms, which trail behind the animal as it swims. A siphon \\\n",
    "is used both for respiration and for locomotion, by expelling \\\n",
    "a jet of water. Octopuses have a complex nervous system and \\\n",
    "excellent sight, and are among the most intelligent and \\\n",
    "behaviourally diverse of all invertebrates.'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Regex Statements"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-09-11T05:59:12.039815Z",
     "start_time": "2018-09-11T05:59:12.036247Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['octopus']"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Search for the word octopus in the text\n",
    "re.findall('octopus', string)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-09-11T05:59:12.478598Z",
     "start_time": "2018-09-11T05:59:12.475157Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['order']"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Search for a word that start with o and end with r, \n",
    "# with 3 charcater inbetween\n",
    "re.findall('o...r', string)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-09-11T05:59:12.875511Z",
     "start_time": "2018-09-11T05:59:12.871779Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['The']"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Search for a string that start with The\n",
    "re.findall('^The', string)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-09-11T05:59:13.178247Z",
     "start_time": "2018-09-11T05:59:13.174241Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['soft-bodied', 'eight-armed']"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Return a compound word with \"-\" that start with a vowel from a to x\n",
    "# with any number of characters following, then has a \"-\" present, \n",
    "# then starts with a charcter from a to z then has any number of similar \n",
    "# charcters afterwards\n",
    "re.findall('[a-z]*-[a-z]*', string)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-09-11T05:59:13.493712Z",
     "start_time": "2018-09-11T05:59:13.489935Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['300']"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Return parts of the string that contain 3 numerical digits from charcater\n",
    "# from 3 to 9\n",
    "re.findall('[0-9][0-9][0-9]', string)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Author: Kavi Sekhon"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.6"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
